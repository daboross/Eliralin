From 41843396391af9c3edb93e18a83d0e9f062db08e Mon Sep 17 00:00:00 2001
From: Dabo Ross <daboross@daboross.net>
Date: Mon, 13 Jan 2014 23:17:29 -0800
Subject: [PATCH] Add connection-independent database 'idb' and use it in
 factoids.


diff --git a/core/main.py b/core/main.py
index eed61a3..3c065e4 100644
--- a/core/main.py
+++ b/core/main.py
@@ -59,6 +59,8 @@ def run(func, input):
     if args:
         if 'db' in args and 'db' not in input:
             input.db = get_db_connection(input.conn)
+        if 'idb' in args and 'idb' not in input:
+            input.idb = get_db_connection(None, name='idb.db')
         if 'input' in args:
             input.input = input
         if 0 in args:
diff --git a/plugins/factoids.py b/plugins/factoids.py
index 3de072b..0859d80 100644
--- a/plugins/factoids.py
+++ b/plugins/factoids.py
@@ -7,7 +7,7 @@ from util import hook, http, text, pyexec
 
 re_lineends = re.compile(r'[\r\n]*')
 
-db_ready = []
+db_ready = False
 
 # some simple "shortcodes" for formatting purposes
 shortcodes = {
@@ -19,13 +19,13 @@ shortcodes = {
     '[/i]': '\x16'}
 
 
-def db_init(db, conn):
+def db_init(db):
     global db_ready
-    if not conn.name in db_ready:
+    if not db_ready:
         db.execute("create table if not exists mem(word, data, nick,"
                    " primary key(word))")
         db.commit()
-        db_ready.append(conn.name)
+        db_ready = True
 
 
 def get_memory(db, word):
@@ -39,10 +39,10 @@ def get_memory(db, word):
 
 @hook.command("r", permissions=["addfactoid"])
 @hook.command(permissions=["addfactoid"])
-def remember(inp, nick='', db=None, notice=None, conn=None):
+def remember(inp, nick='', idb=None, notice=None):
     """remember <word> [+]<data> -- Remembers <data> with <word>. Add +
     to <data> to append."""
-    db_init(db, conn)
+    db_init(idb)
 
     append = False
 
@@ -53,7 +53,7 @@ def remember(inp, nick='', db=None, notice=None, conn=None):
     except ValueError:
         return remember.__doc__
 
-    old_data = get_memory(db, word)
+    old_data = get_memory(idb, word)
 
     if data.startswith('+') and old_data:
         append = True
@@ -65,9 +65,9 @@ def remember(inp, nick='', db=None, notice=None, conn=None):
         else:
             data = old_data + ' ' + new_data
 
-    db.execute("replace into mem(word, data, nick) values"
+    idb.execute("replace into mem(word, data, nick) values"
                " (lower(?),?,?)", (word, data, nick))
-    db.commit()
+    idb.commit()
 
     if old_data:
         if append:
@@ -81,16 +81,15 @@ def remember(inp, nick='', db=None, notice=None, conn=None):
 
 @hook.command("f", permissions=["delfactoid"])
 @hook.command(permissions=["delfactoid"])
-def forget(inp, db=None, notice=None, conn=None):
+def forget(inp, idb=None, notice=None):
     """forget <word> -- Forgets a remembered <word>."""
-
-    db_init(db, conn)
-    data = get_memory(db, inp)
+    db_init(idb)
+    data = get_memory(idb, inp)
 
     if data:
-        db.execute("delete from mem where word=lower(?)",
+        idb.execute("delete from mem where word=lower(?)",
                    [inp])
-        db.commit()
+        idb.commit()
         notice(u'"%s" has been forgotten.' % data.replace('`', "'"))
         return
     else:
@@ -99,13 +98,12 @@ def forget(inp, db=None, notice=None, conn=None):
 
 
 @hook.command
-def info(inp, notice=None, db=None, conn=None):
+def info(inp, notice=None, idb=None):
     """info <factoid> -- Shows the source of a factoid."""
-
-    db_init(db, conn)
+    db_init(idb)
 
     # attempt to get the factoid from the database
-    data = get_memory(db, inp.strip())
+    data = get_memory(idb, inp.strip())
 
     if data:
         notice(data)
@@ -114,14 +112,14 @@ def info(inp, notice=None, db=None, conn=None):
 
 
 @hook.regex(r'^\? ?(.+)')
-def factoid(inp, message=None, db=None, bot=None, action=None, conn=None, input=None):
+def factoid(inp, message=None, idb=None, bot=None, action=None, conn=None, input=None):
     """?<word> -- Shows what data is associated with <word>."""
     try:
         prefix_on = bot.config["plugins"]["factoids"].get("prefix", False)
     except KeyError:
         prefix_on = False
 
-    db_init(db, conn)
+    db_init(idb)
 
     # split up the input
     split = inp.group(1).strip().split(" ")
@@ -132,7 +130,7 @@ def factoid(inp, message=None, db=None, bot=None, action=None, conn=None, input=
     else:
         arguments = ""
 
-    data = get_memory(db, factoid_id)
+    data = get_memory(idb, factoid_id)
 
     if data:
         # factoid preprocessors
-- 
1.9.2


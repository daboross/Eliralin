From 2f63dd13c497c1ac2d266a2ddc41c23d5494efa3 Mon Sep 17 00:00:00 2001
From: Dabo Ross <daboross@daboross.net>
Date: Wed, 16 Apr 2014 17:41:22 -0700
Subject: [PATCH] Use regex groups in the correction plugin

This makes correction.py use the already-matched regex groups to get the correction parameters, instead of splitting the input afterwards. It also fixes the bot not counting S/ as a valid replacing string in searching history.

diff --git a/plugins/correction.py b/plugins/correction.py
index 9cb7c20..a72637b 100644
--- a/plugins/correction.py
+++ b/plugins/correction.py
@@ -3,8 +3,8 @@ import re
 from util import hook
 
 
-CORRECTION_RE = r'^[sS]/.*/.*/?\S*$'
-
+CORRECTION_RE = r'^[sS]/([^/]*)/([^/]*)(/.*)?\s*$'
+S_RE = re.compile(r'^[sS]/[^/]*/[^/]*(/.*)?\s*$')
 
 @hook.regex(CORRECTION_RE)
 def correction(match, input=None, conn=None, message=None):
@@ -13,31 +13,29 @@ def correction(match, input=None, conn=None, message=None):
     :type input: core.main.Input
     :type conn: core.irc.BotConnection
     """
-    split = input.msg.split("/")
-
-    if len(split) == 4:
-        nick = split[3].lower()
-    else:
-        nick = None
+    print(match.groups())
+    to_find, replacement, find_nick = match.groups()
+    if find_nick:
+        find_nick = find_nick[1:].lower()  # Remove the '/'
 
-    find = split[1]
-    find_re = re.compile("(?i){}".format(re.escape(find)))
-    replace = split[2]
+    find_re = re.compile("(?i){}".format(re.escape(to_find)))
 
     for item in conn.history[input.chan].__reversed__():
-        name, timestamp, msg = item
-        if msg.startswith("s/"):
+        nick, timestamp, msg = item
+        if S_RE.match(msg):
             # don't correct corrections, it gets really confusing
             continue
-        if nick:
-            if nick != name.lower():
+        if find_nick:
+            if find_nick != nick.lower():
                 continue
         if find_re.search(msg):
             if "\x01ACTION" in msg:
                 msg = msg.replace("\x01ACTION ", "/me ").replace("\x01", "")
-            message("Correction, <{}> {}".format(name, find_re.sub("\x02" + replace + "\x02", msg)))
+            message("Correction, <{}> {}".format(nick, find_re.sub("\x02" + replacement + "\x02", msg)))
             return
         else:
             continue
-
-    return "Did not find {} in any recent messages.".format(find)
+    if find_nick:
+        return "Did not find {} in any recent messages from {}.".format(to_find, find_nick)
+    else:
+        return "Did not find {} in any recent messages.".format(to_find)
-- 
1.9.2


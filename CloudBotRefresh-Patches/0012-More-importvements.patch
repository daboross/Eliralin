From 8d83a74d5a64101afa2788a26a0bbc616a0eea68 Mon Sep 17 00:00:00 2001
From: Dabo Ross <daboross@daboross.net>
Date: Wed, 23 Apr 2014 16:35:00 -0700
Subject: [PATCH] More importvements


diff --git a/qpt_tests/mass.py b/qpt_tests/mass.py
index a6d2113..de39488 100644
--- a/qpt_tests/mass.py
+++ b/qpt_tests/mass.py
@@ -35,125 +35,230 @@ tested_result_commands = [
 # this is for mass tests where you can just check the console results.
 # where expected result regexes haven't been written yet
 mass_valid_commands = [
-    "say hi",
-    "say #chan2 hi"
-    "message TestUser hi",
-    "nick TestBot2",
+    # admin.py
     "adduser TestUser2!~user@example.com admins",
     "deluser TestUser2!~user@example.com",
     "join #chan2",
     "part #chan2",
     "cycle #channel",
+    "permgroups",
+    "gperms admins",
+    "gusers admins",
+    "ugroups",
+    "uperms",
     "me hi",
     "me #chan2 hi",
-    "ugroups",
-    "lart TestUser",
-    "lart itself",
+    "message TestUser2 Hi",
+    "nick TestBot2",
+    "raw PRIVMSG #channel :This is a raw message.",
+    # we can't test restart/stop, it would restart/stop the bot
+    "say hi",
+    "say #chan2 hi",
+    # attacks.py
     "flirt TestUser",
     "flirt itself",
     "insult TestUser",
     "insult itself",
+    "lart TestUser",
+    "lart itself",
+    # brainfuck.py - tested above
+    # choose.py - tested above
+    # cryptocoins.py
     "ltc",
     "btc",
+    # cypher.py
     "cypher mypassword mytext",
     "decypher mypassword w5rDssOkw4bDq8On",
+    # dbtest.py - TODO
+    # dice.py
     "roll 2d6",
-    "e world",
+    # dictionary.py
     "define world",
+    "e world",
+    # domainr.py
     "domain cloudbot",
+    # drama.py
     "drama world",
+    # eightball.py
     "8 ?",
-    # TODO: encrypt
+    # encrypt.py - TODO
+    # fact.py
     "fact",
+    # factoids.py - TODO
+    # fishbans.py
+    "bancount notch",
+    "bancount daboross",
     "bans notch",
     "bans daboross",
+    # fmylife.py
     "fml",
+    # fortune.py
     "fortune",
+    # geoip.py
     "geoip daboross.net",
     "gitio github.com/ClouDev/CloudBot",
+    # github.py
     "ghissues ClouDev/CloudBot",
+    # google.py
     "g cloudbot",
     "gis cloudbot",
-    # TODO: translate & googleurl
+    # google_translate.py - TODO
+    # googleurlparse.py - TODO
+    # help.py
+    "help",
+    "help lart",
+    # horoscope.py
     "horoscope",
-    # TODO: ignore & imbd & hulu & imgur
-    "imdb",
+    # hulu.py - TODO
+    # ignore.py - TODO
+    # imdb.py - TODO
+    # imgur.py - TODO
+    # kernel.py
     "kernel",
+    # kill.py
     "kill TestUser",  # TODO: kill should be in attacks
-    # TODO: lastfm
-    # TODO: lyrics
-    # TODO: mc
-    "randomplugin",
+    # lastfm.py - TODO
+    # lmgtfy.py
+    "lmgtfy cloudbot",
+    # lyrics.py - TODO
+    # metacritic.py - TODO
+    # minecraft_bukget.py
     "plugin skywars",
-    "mccraft stone",
-    "mcid stone",
+    "randomplugin",
+    # minecraft_items.py
+    "mcid cobblestone",
+    "mccraft stonestairs",
+    # minecraft_ping.py
     "mcping play.aemservers.net",
+    # minecraft_status.py
     "mcstatus",
+    # minecraft_user.py
     "mcuser zbsh",
     "mcuser iamnotausernameplz",
+    # minecraft_wiki.py
     "mcwiki stone",
+    # mlia.py
     "mlia",
+    # namegen.py
     "namegen",
     "namegen dragons",  # TODO: namegen for each in list
     "namegen list",
+    # newegg.py
     "newegg monitor",
-    # TODO: notes
+    # notes.py - TODO
+    # op.py
+    "ban Dabo",
+    "unban Dabo",
+    "voice Dabo",
+    "devoice Dabo",
+    "kick Dabo",
+    "lock Dabo",
+    "unlock Dabo",
     "mute Dabo",
     "unmute Dabo",
     "op Dabo",
     "deop Dabo",
-    "ban Dabo",
-    "unban Dabo",
+    "quiet Dabo",
+    "unquiet Dabo",
+    "remove Dabo",
+    "topic Hey a topic",
+    "remove Dabo",
+    # osrc.py
     "osrc daboross",
+    # pagecheck.py
     "down daboross.net",
     "isup daboross.net",
     "down asdffdsaasdffdsa.net",
     "isup asdffdsaasdffdsa.net",
+    # password.py
     "password 8",
+    "readablepassword 8",
+    # ping.py
     "ping dabo.guru",
+    # plpaste.py
     "plpaste admin",
+    # potato.py
     "potato Dabo",
+    # python.py
     "python print('Hello World!')",
+    # qrcode.py
     "qr dabo.guru",
-    # TODO: quote, rdio, reddit, rottentomatoes, rt, scene
+    # quote.py - TODO
+    # rdio.py - TODO
+    # reddit.py - TODO
+    # rottentomatoes.py - TODO
+    # rss.py - TODO
+    # scene.py - TODO
+    # shorten.py
     "shorten dabo.guru",
-    "slap Dabo",
+    # slap.py
+    "slap Dabo",  # TODO: This should be in attacks
+    # slogan.py
     "slogan CloudBot",
-    # TODO: snopes
-    # TODO: soundcloud
+    # snopes.py - TODO
+    # soundcloud.py - TODO
+    # spellcheck.py
     "spell hallo",
-    # TODO: spotify, steam, steam_calc
+    # spotify.py - TODO
+    # steam.py - TODO
+    # steam_calc.py - TODO
+    # stock.py - TODO
+    # suggest.py
     "suggest cloudb",
-    "uptime",
+    # system.py
     "memory",
     "pid",
     "system",
-    # TODO: time, beats
+    "uptime",
+    # time_plugin.py - TODO
+    # title.py
     "title dabo.guru",
-    # TODO: tvdb
-    # TODO: twitch
-    "u cloud",
+    # tvdb.py - TODO
+    # twitch.py - TODO
+    # urban.py
+    "urban cloud",
     "upper cloudbot",
-    # TODO: base64/unbase64/checkbase64
-    "rainbow cloudbot",
-    "usa cloudbot",
-    "munge cloudbot",
+    # utility.py
+    # - case manipulation
     "titlecase cloud bot",
     "lower ClOuDbOt",
     "swapcase cloudBOT",
-    "capitalize cloudbot",
-    # TODO: unescape / escape
+    "capitalize cloudbot. period.",
+    # - encoding
+    "rot13 hi",
+    "rot13 uv",
+    "base64 hi",
+    "unbase64 aGk=",
+    "isbase64 hi",
+    "isbase64 aGk=",
+    "escape \u26c2",
+    "unescape \\u26c2",
+    # - other string stuff
+    "length cloudbot",
     "reverse racecars",
     "hash cloudbot",
-    "length cloudbot",
+    "munge cloudbot",
+    # - colors
+    "rainbow cloudbot",
+    "wrainbow cloudbot",
+    "usa cloudbot",
+    # validate.py
     "validate dabo.guru",
-    # TODO: valvesounds, vimeo
+    # valvesounds.py .- TODO
+    # vimeo.py - TODO
+    # weather.py
     "weather seattle",
+    # wikipedia.py
     "wiki seattle",
+    # wolframalpha.py
     "wa 2 + 2",
+    # xkcd.py
     "xkcd NRO",
+    # yahooanswers.py
     "answer why is the world green?",
-    "y cloudbot"
+    # youtube.py
+    "youtube asdf",
+    "youtime asdf"
 ]
 
 
@@ -173,5 +278,4 @@ def test_command_results(conn, test_number, get, send):
 def mass_test(conn, send, test_number, get):
     run_command(conn, send, mass_valid_commands[test_number])
     # get an result, even if it isn't used.
-    # get an result, even if it isn't used. 
     get()
diff --git a/qpt_tests/print_all_commands.py b/qpt_tests/print_all_commands.py
deleted file mode 100644
index acfd4c2..0000000
--- a/qpt_tests/print_all_commands.py
+++ /dev/null
@@ -1,17 +0,0 @@
-# from operator import attrgetter
-#
-# from util.qpt import test
-#
-#
-# @test()
-# def print_all_commands(bot):
-#     """
-#     Prints all commands on a bot, sorted by plugin. This is used for debug.
-#     :type bot: core.bot.CloudBot
-#     """
-#     modules = sorted(bot.plugin_manager.modules.values(), key=attrgetter("title"))
-#     for module in modules:
-#         print("{}: {}".format(
-#             module.title,
-#             ["/".join(cmd.aliases) for cmd in module.commands]
-#         ))
diff --git a/qpt_tests/z_print.py b/qpt_tests/z_print.py
new file mode 100644
index 0000000..24359a6
--- /dev/null
+++ b/qpt_tests/z_print.py
@@ -0,0 +1,16 @@
+from operator import attrgetter
+
+from util.qpt import test
+
+
+@test()
+def print_all_commands(bot):
+    """
+    Prints all commands on a bot, sorted by plugin. This is used for debug.
+    :type bot: core.bot.CloudBot
+    """
+    modules = sorted(bot.plugin_manager.modules.values(), key=attrgetter("title"))
+    for module in modules:
+        print(module.title + ":")
+        for command in sorted(module.commands, key=attrgetter("name")):
+            print("\t{} - {}".format("/".join(command.aliases), command.has_run))
diff --git a/util/qpt.py b/util/qpt.py
index 80a2993..69d63d1 100644
--- a/util/qpt.py
+++ b/util/qpt.py
@@ -103,7 +103,7 @@ def run_test(obj_with_shutdown, func, bot, conn, input_queue, output_queue):
 
 def run_tests(obj_with_shutdown, logger, bot, conn, input_queue, output_queue):
     files = set(glob.glob(os.path.join("qpt_tests", '*.py')))
-
+    print(files)
     for file in files:
 
         if obj_with_shutdown.shutdown:
@@ -111,7 +111,7 @@ def run_tests(obj_with_shutdown, logger, bot, conn, input_queue, output_queue):
         title = os.path.splitext(os.path.basename(file))[0]
 
         if title == "__init__":
-            return  # ignore __init__
+            continue  # ignore __init__
 
         try:
             module = importlib.import_module("qpt_tests." + title)
-- 
1.9.2


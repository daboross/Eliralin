From 98fbd389135a2aad741a3cbef50ba433ab87a6b3 Mon Sep 17 00:00:00 2001
From: Dabo Ross <daboross@daboross.net>
Date: Mon, 7 Apr 2014 00:06:03 -0700
Subject: [PATCH] Re-order the checks in core_sieve so they all function
 correctly (fixes permission checking for commands)


diff --git a/plugins/core_sieve.py b/plugins/core_sieve.py
index 1f6836f..81cfa3b 100644
--- a/plugins/core_sieve.py
+++ b/plugins/core_sieve.py
@@ -4,39 +4,18 @@ TOKENS = 10
 RESTORE_RATE = 2
 MESSAGE_COST = 5
 
-
 buckets = {}
 
+
 @hook.sieve
 def sieve_suite(bot, input, func, kind, args):
     conn = input.conn
+    # check ignorebots
     if input.command == 'PRIVMSG' and \
             input.nick.endswith('bot') and args.get('ignorebots', True):
         return None
 
-    if kind == "command":
-        uid = (input.nick, input.chan)
-
-        if not uid in buckets:
-            _bucket = bucket.TokenBucket(TOKENS, RESTORE_RATE)
-            _bucket.consume(MESSAGE_COST)
-            buckets[uid] = _bucket
-            return input
-
-        _bucket = buckets[uid]
-        if _bucket.consume(MESSAGE_COST):
-            pass
-        else:
-            print("pong!")
-            return None
-
-        disabled_commands = conn.config.get('disabled_commands', [])
-        if input.trigger in disabled_commands:
-            return None
-
-        return input
-
-
+    # check acls
     acl = conn.config.get('acls', {}).get(func.__name__)
     if acl:
         if 'deny-except' in acl:
@@ -48,19 +27,43 @@ def sieve_suite(bot, input, func, kind, args):
             if input.chan.lower() in denied_channels:
                 return None
 
-    # shim so plugins using the old "adminonly" permissions format still work
+    # check disabled_commands
+    if kind == "command":
+        disabled_commands = conn.config.get('disabled_commands', [])
+        if input.trigger in disabled_commands:
+            return None
+
+    # check permissions
     if args.get('adminonly', False):
         args["permissions"] = ["adminonly"]
-
     if args.get('permissions', False):
         mask = input.mask.lower()
 
         allowed_permissions = args.get('permissions', [])
+        allowed = False
         for perm in allowed_permissions:
             if conn.permissions.has_perm_mask(mask, perm):
-                return input
+                allowed = True
 
-        input.notice("Sorry, you are not allowed to use this command.")
-        return None
+        if not allowed:
+            input.notice("Sorry, you are not allowed to use this command.")
+            return None
+
+    # check command spam tokens
+    if kind == "command":
+        uid = (input.nick, input.chan)
+
+        if not uid in buckets:
+            _bucket = bucket.TokenBucket(TOKENS, RESTORE_RATE)
+            _bucket.consume(MESSAGE_COST)
+            buckets[uid] = _bucket
+            return input
+
+        _bucket = buckets[uid]
+        if _bucket.consume(MESSAGE_COST):
+            pass
+        else:
+            print("pong!")
+            return None
 
     return input
-- 
1.9.1


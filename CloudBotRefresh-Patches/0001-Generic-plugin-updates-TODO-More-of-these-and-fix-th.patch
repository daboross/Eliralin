From 2fe08ec93a3a1a65915a87dd550c8ecef343b162 Mon Sep 17 00:00:00 2001
From: Dabo Ross <daboross@daboross.net>
Date: Mon, 7 Apr 2014 00:06:33 -0700
Subject: [PATCH] Generic plugin updates - TODO: More of these, and fix this


diff --git a/plugins/admin.py b/plugins/admin.py
index beab945..c4a838b 100644
--- a/plugins/admin.py
+++ b/plugins/admin.py
@@ -3,31 +3,26 @@ import re
 from util import hook
 
 
-@hook.command(autohelp=False, permissions=["permissions_users"])
-def permissions(inp, bot=None, notice=None):
-    """permissions [group] -- lists the users and their permission level who have permissions."""
-    permissions = bot.config.get("permissions", [])
-    groups = []
-    if inp:
-        for k in permissions:
-            if inp == k:
-                groups.append(k)
-    else:
-        for k in permissions:
-            groups.append(k)
-    if not groups:
-        notice("{} is not a group with permissions".format(inp))
-        return None
-
-    for v in groups:
-        members = ""
-        for value in permissions[v]["users"]:
-            members = members + value + ", "
-        if members:
-            notice("the members in the {} group are..".format(v))
-            notice(members[:-2])
+@hook.command(permissions=["permissions_users"])
+def grouppermissions(inp, input=None, notice=None, conn=None):
+    """permissions [group] -- lists the users and their permission level who have permissions.
+    :type inp: str
+    :type input: core.main.Input
+    :type notice: function
+    :type conn: core.irc.BotConnection
+    """
+    permission_manager = conn.permissions
+    group_users = permission_manager.get_group_users(inp)
+    group_permissions = permission_manager.get_group_permissions(inp)
+    if group_permissions:
+        if group_users:
+            return "Group {} has members: {}, permissions {}".format(inp, group_users, group_permissions)
         else:
-            notice("there are no members in the {} group".format(v))
+            return "Group {} has no members, but has permissions {}".format(inp, group_permissions)
+    elif group_users:
+        return "Group {} has members: {}, but no permissions".format(inp, group_users)
+    else:
+        return "Group {} has no users nor permissions".format(inp)
 
 
 @hook.command(permissions=["permissions_users"])
diff --git a/plugins/plpaste.py b/plugins/plpaste.py
index 238037d..d46e672 100644
--- a/plugins/plpaste.py
+++ b/plugins/plpaste.py
@@ -1,12 +1,14 @@
 from util import hook, web
+from os import listdir
 
 
-@hook.command(adminonly=True)
-def plpaste(inp):
-    if "/" in inp and inp.split("/")[0] != "util":
-        return "Invalid input"
-    try:
-        with open("plugins/%s.py" % inp) as f:
+@hook.command(permissions=["adminonly"])
+def plpaste(inp, bot=None):
+    if inp in bot.commands:
+        with open(bot.commands[inp][0].func_code.co_filename.strip()) as f:
             return web.haste(f.read(), ext='py')
-    except IOError:
-        return "Plugin not found (must be in plugins folder)"
+    elif inp + ".py" in listdir('plugins/'):
+        with open('plugins/{}.py'.format(inp)) as f:
+            return web.haste(f.read(), ext='py')
+    else:
+        return "Could not find specified plugin."
diff --git a/plugins/steam.py b/plugins/steam.py
index afa86f8..c3531b3 100644
--- a/plugins/steam.py
+++ b/plugins/steam.py
@@ -13,10 +13,8 @@ def get_steam_info(url):
     page = http.get(url)
     soup = BeautifulSoup(page, 'lxml', from_encoding="utf-8")
 
-    data = {}
-
-    data["name"] = soup.find('div', {'class': 'apphub_AppName'}).text
-    data["desc"] = truncate_str(soup.find('meta', {'name': 'description'})['content'].strip(), 80)
+    data = {"name": soup.find('div', {'class': 'apphub_AppName'}).text,
+            "desc": truncate_str(soup.find('meta', {'name': 'description'})['content'].strip(), 80)}
 
     # get the element details_block
     details = soup.find('div', {'class': 'details_block'})
-- 
1.9.1


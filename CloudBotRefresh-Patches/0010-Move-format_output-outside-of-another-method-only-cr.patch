From 646b0838fe9e907120ade79e9e8ec609afe13d3c Mon Sep 17 00:00:00 2001
From: Dabo Ross <daboross@daboross.net>
Date: Wed, 16 Apr 2014 17:44:01 -0700
Subject: [PATCH] Move format_output outside of another method - only create it
 once


diff --git a/plugins/dictionary.py b/plugins/dictionary.py
index a763815..34a2e7b 100644
--- a/plugins/dictionary.py
+++ b/plugins/dictionary.py
@@ -5,6 +5,44 @@ from util import hook
 from util import http
 
 
+def format_output(h, definition, show_examples):
+    """
+    :type h: lxml.etree._Element._Element
+    :type definition: tuple
+    """
+    result = '{}: '.format(h.xpath('//dt[@class="title-word"]/a/text()')[0])
+
+    correction = h.xpath('//span[@class="correct-word"]/text()')
+    if correction:
+        result = 'Definition for "{}": '.format(correction[0])
+
+    sections = []
+    for section in definition:
+        if section.attrib['class'] == 'article':
+            sections += [[section.text_content() + ': ']]
+        elif section.attrib['class'] == 'example':
+            if show_examples:
+                sections[-1][-1] += ' ' + section.text_content()
+        else:
+            sections[-1] += [section.text_content()]
+
+    for article in sections:
+        result += article[0]
+        if len(article) > 2:
+            result += ' '.join('{}. {}'.format(n + 1, section)
+                               for n, section in enumerate(article[1:]))
+        else:
+            result += article[1] + ' '
+
+    synonyms = h.xpath('//dd[@class="synonyms"]')
+    if synonyms:
+        result += synonyms[0].text_content()
+
+    result = re.sub(r'\s+', ' ', result)
+    result = re.sub('\xb0', '', result)
+    return result
+
+
 @hook.command('dictionary')
 @hook.command()
 def define(inp):
@@ -23,42 +61,9 @@ def define(inp):
     if not definition:
         return 'No results for ' + inp + ' :('
 
-    def format_output(show_examples):
-        result = '{}: '.format(h.xpath('//dt[@class="title-word"]/a/text()')[0])
-
-        correction = h.xpath('//span[@class="correct-word"]/text()')
-        if correction:
-            result = 'Definition for "{}": '.format(correction[0])
-
-        sections = []
-        for section in definition:
-            if section.attrib['class'] == 'article':
-                sections += [[section.text_content() + ': ']]
-            elif section.attrib['class'] == 'example':
-                if show_examples:
-                    sections[-1][-1] += ' ' + section.text_content()
-            else:
-                sections[-1] += [section.text_content()]
-
-        for article in sections:
-            result += article[0]
-            if len(article) > 2:
-                result += ' '.join('{}. {}'.format(n + 1, section)
-                                   for n, section in enumerate(article[1:]))
-            else:
-                result += article[1] + ' '
-
-        synonyms = h.xpath('//dd[@class="synonyms"]')
-        if synonyms:
-            result += synonyms[0].text_content()
-
-        result = re.sub(r'\s+', ' ', result)
-        result = re.sub('\xb0', '', result)
-        return result
-
-    result = format_output(True)
+    result = format_output(h, definition, True)
     if len(result) > 450:
-        result = format_output(False)
+        result = format_output(h, definition, False)
 
     if len(result) > 450:
         result = result[:result.rfind(' ', 0, 450)]
-- 
1.9.2


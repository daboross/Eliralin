#!/bin/bash

declare -r SCRIPT="$([[ $0 = /* ]] && echo "$0" || echo "$PWD/${0#./}")"
declare -r BASE_DIR="$(dirname $SCRIPT)"

declare -r RED="$(tput setaf 1)"
declare -r GREEN="$(tput setaf 2)"
declare -r NORMAL="$(tput sgr0)"

function log {
    echo "${RED}#${GREEN} ${1}${NORMAL}"
}
function log_fail {
    echo "${GREEN}#${RED} ${1}${NORMAL}"
}

function apply_patches {
    local -r ORIGIN="$1"        ; shift
    local -r ORIGIN_BRANCH="$1" ; shift
    local -r TARGET="$1"        ; shift
    local -r TARGET_BRANCH="$1" ; shift
    local -r PATCH_DIR="$1"     ; shift

    cd "$BASE_DIR"

    if [[ ! -d  "$BASE_DIR/$TARGET" ]]; then
        git clone "$ORIGIN" "$TARGET" -b "$ORIGIN_BRANCH" -o upstream
    fi

    cd "$BASE_DIR/$TARGET"

    log "Resetting $TARGET/$TARGET_BRANCH to $ORIGIN/$ORIGIN_BRANCH"

    if [[ "$TARGET" == "$ORIGIN" ]]; then
        git checkout -B "$TARGET_BRANCH" --track "$ORIGIN_BRANCH"
    else
        local -r REMOTE="$(readlink -f $BASE_DIR/$ORIGIN)"
        local -r CURRENT_REMOTE="$(git config --get remote.upstream.url)"
        if [[ "$CURRENT_REMOTE" != "$REMOTE" ]]; then
            log "Changing the upstream of $TARGET from $CURRENT_REMOTE to $REMOTE"
            git remote set-url upstream "$REMOTE"
        fi
        git fetch upstream &> /dev/null
        git checkout -B "$TARGET_BRANCH" --track "upstream/$ORIGIN_BRANCH"
    fi

    log "Applying patches to $TARGET/$TARGET_BRANCH from $PATCH_DIR"

    git am --abort
    git add -A  # in case there are any files that were created that were left by git am, we need to add them then reset
    git reset --hard HEAD
    if [[ "$(ls -A "$BASE_DIR/$PATCH_DIR/")" ]]; then
        git am --3way "$BASE_DIR/$PATCH_DIR/"*.patch
        if (( "$?" )); then # if return code is not 0
            log_fail "Something did not apply cleanly to $TARGET/$TARGET_BRANCH."
            log_fail "Please review above details and finish the apply then save the changes with \`rebuild-patches\`"
            return 1
        else
            log "Patches applied cleanly to $TARGET/$TARGET_BRANCH"
        fi
    fi
}
# Refresh-origin/master + Patches-01-rerefactoring -> Refresh-rerefactoring/re-refactoring-no-plugins
apply_patches Refresh-origin master Refresh-rerefactoring re-refactoring-no-plugins Patches-01-rerefactoring &&
# Refresh-rerefactoring/re-refactoring-no-plugins + Patches-02-rerefactoring-plugins -> Refresh-rerefactoring/re-refactoring
apply_patches Refresh-rerefactoring re-refactoring-no-plugins Refresh-rerefactoring re-refactoring Patches-02-rerefactoring-plugins &&
# Refresh-rerefactoring/re-refactoring + Patches-03-connection-emerge -> Refresh-connection-emerge/connection-emerge-no-plugins
apply_patches Refresh-rerefactoring re-refactoring Refresh-connection-emerge connection-emerge-no-plugins Patches-03-connection-emerge &&
# Refresh-connection-emerge/connection-emerge-no-plugins + Patches-04-connection-emerge-plugins -> Refresh-connection-emerge/connection-emerge
apply_patches Refresh-connection-emerge connection-emerge-no-plugins Refresh-connection-emerge connection-emerge Patches-04-connection-emerge-plugins &&
# Refresh-connection-emerge/connection-emerge + Patches-05-Eliralin -> Eliralin/master
apply_patches Refresh-connection-emerge connection-emerge Eliralin master Patches-05-eliralin

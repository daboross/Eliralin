#!/bin/bash

declare -r SCRIPT="$([[ $0 = /* ]] && echo "$0" || echo "$PWD/${0#./}")"
declare -r BASE_DIR="$(dirname $SCRIPT)"

declare -r RED="$(tput setaf 1)"
declare -r GREEN="$(tput setaf 2)"
declare -r NORMAL="$(tput sgr0)"

function log {
    echo "${RED}#${GREEN} ${1}${NORMAL}"
}
function log_fail {
    echo "${GREEN}#${RED} ${1}${NORMAL}"
}

function apply_patches {
    local -r ORIGIN="$1"        ; shift
    local -r ORIGIN_BRANCH="$1" ; shift
    local -r TARGET="$1"        ; shift
    local -r TARGET_BRANCH="$1" ; shift
    local -r PATCH_DIR="$1"     ; shift

    cd "$BASE_DIR"

    if [[ ! -d  "$BASE_DIR/$TARGET" ]]; then
        git clone "$ORIGIN" "$TARGET" -b "$ORIGIN_BRANCH"
    fi

    cd "$BASE_DIR/$TARGET"

    log "Resetting $TARGET/$TARGET_BRANCH to $ORIGIN/$ORIGIN_BRANCH"

    if [[ "$TARGET" == "$ORIGIN" ]]; then
        git checkout -B "$TARGET_BRANCH" --track "$ORIGIN_BRANCH"
    else
        git fetch upstream &> /dev/null
        git checkout -B "$TARGET_BRANCH" --track "upstream/$ORIGIN_BRANCH"
    fi

    log "Applying patches to $TARGET/$TARGET_BRANCH from $PATCH_DIR"

    git am --abort
    git am --3way "$BASE_DIR/$PATCH_DIR/"*.patch
    if (( "$?" )); then # if return code is not 0
        log_fail "Something did not apply cleanly to $TARGET/$TARGET_BRANCH."
        log_fail "Please review above details and finish the apply then save the changes with \`rebuild-patches\`"
        return 1
    else
        log "Patches applied cleanly to $TARGET/$TARGET_BRANCH"
        if [[ "$TARGET" == "$ORIGIN" ]]; then
            log "Checking out $ORIGIN to $ORIGIN_BRANCH"
            git checkout "$ORIGIN_BRANCH"
        fi
    fi
}

# Refresh/master  + Patches-01-Connection-Emerge -> Refresh/connection-emerge-no-plugins
apply_patches Refresh master Refresh connection-emerge-no-plugins Patches-01-Connection-Emerge &&
# Refresh/connection-emerge-no-plugins + Patches-02-Connection-Emerge-Plugins -> Refresh/connection-emerge
apply_patches Refresh connection-emerge-no-plugins Refresh connection-emerge Patches-02-Connection-Emerge-Plugins &&
# Refresh/connection-emerge + Patches-02-Eliralin -> Eliralin/master
apply_patches Refresh connection-emerge Eliralin master Patches-03-Eliralin

# Make sure we're checked out to master
cd "$BASE_DIR/Refresh"
git checkout master

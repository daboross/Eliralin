#!/bin/bash

declare -r SCRIPT="$([[ $0 = /* ]] && echo "$0" || echo "$PWD/${0#./}")"
declare -r BASE_DIR="$(dirname $SCRIPT)"

declare -r RED="$(tput setaf 1)"
declare -r GREEN="$(tput setaf 2)"
declare -r NORMAL="$(tput sgr0)"

function log {
    echo "${RED}#${GREEN} ${1}${NORMAL}"
}

function save_patches {
    local -r TARGET="$1"        ; shift
    local -r TARGET_BRANCH="$1" ; shift
    local -r PATCH_DIR="$1"     ; shift

    log "Saving patches for $TARGET/$TARGET_BRANCH to $PATCH_DIR"

    cd "$BASE_DIR/$TARGET"

    local -r UPSTREAM_REMOTE_AND_BRANCH="$(git rev-parse --abbrev-ref ${TARGET_BRANCH}@{upstream})"

    git format-patch --no-stat -N -o "$(readlink -f $BASE_DIR/$PATCH_DIR)" "$UPSTREAM_REMOTE_AND_BRANCH..$TARGET_BRANCH"

    log "Patches for $TARGET/$TARGET_BRANCH saved to $PATCH_DIR"
}
function save_patches_by_name {
    case "$1" in
        re*p*) # re-refactoring-plugins
            save_patches Refresh-rerefactoring re-refactoring Patches-02-rerefactoring-plugins ;;
        re*) # re-refactoring
            save_patches Refresh-rerefactoring re-refactoring-no-plugins Patches-01-rerefactoring ;;
        c*p*) # connection-emerge-plugins
            save_patches Refresh-connection-emerge connection-emerge Patches-04-connection-emerge-plugins ;;
        c*) # connection-emerge
            save_patches Refresh-connection-emerge connection-emerge-no-plugins Patches-03-connection-emerge ;;
        e*) # eliralin
            save_patches Eliralin master Patches-05-eliralin ;;
        ?*)
            echo "Expected (re-refactoring-plugins, re-refactoring, connection-emerge-plugins, connection-emerge, eliralin), but found $1"
    esac
}

if (( "$#" )); then
    while (( "$#" )); do
        save_patches_by_name "$1"
        shift
    done
else
    save_patches_by_name "re-refactoring"
    save_patches_by_name "re-refactoring-plugins"
    save_patches_by_name "connection-emerge"
    save_patches_by_name "connection-emerge-plugins"
    save_patches_by_name "eliralin"
fi

From 7fa04036b62421bc02678d2769d3a98d2160f8d0 Mon Sep 17 00:00:00 2001
From: Dabo Ross <daboross@daboross.net>
Date: Sat, 31 May 2014 19:42:47 -0700
Subject: [PATCH] Use qx.lc for all shortening, just to test


diff --git a/cloudbot/util/web.py b/cloudbot/util/web.py
index 944f4f0..599c637 100644
--- a/cloudbot/util/web.py
+++ b/cloudbot/util/web.py
@@ -48,21 +48,21 @@ def _paste_service(name):
     return _decorator
 
 
-def shorten(url, service="is.gd", custom=None):
+def shorten(url, service="qx.lc", custom=None):
     impl = shortening_services.get(service)
     assert impl is not None, "invalid service {}".format(service)
 
     return impl.shorten(url, custom)
 
 
-def try_shorten(url, service="is.gd", custom=None):
+def try_shorten(url, service="qx.lc", custom=None):
     impl = shortening_services.get(service)
     assert impl is not None, "invalid service {}".format(service)
 
     return impl.try_shorten(url, custom)
 
 
-def paste(data, service="hastebin", ext=None, custom_server=None):
+def paste(data, service="qx.lc", ext=None, custom_server=None):
     impl = paste_services.get(service)
     assert impl is not None, "invalid service {}".format(service)
 
@@ -116,3 +116,30 @@ class Hastebin(PasteService):
             return "{}/{}.{}".format(server, j['key'], ext)
         else:
             return "{}/{}".format(server, j['key'])
+
+
+@_shortening_service("qx.lc")
+class QxlcLinks(ShorteningService):
+    def shorten(self, url, custom):
+        server = "http://qx.lc"
+        # qx.lc doesn't support custom urls
+        r = requests.post("{}/api/shorten".format(server), data={"url": url})
+
+        if r.status_code != 200:
+            raise ShortenError(r.text, r)
+        else:
+            return r.text
+
+@_paste_service("qx.lc")
+class QxlcPaste(PasteService):
+    def paste(self, text, ext, server="http://qx.lc"):
+        r = requests.post("{}/api/paste".format(server), data={"paste": text})
+        url = r.text
+
+        if r.status_code != 200:
+            return r.text  # this is the error text
+        else:
+            if ext is not None:
+                return "{}.{}".format(url, ext)
+            else:
+                return url
\ No newline at end of file
-- 
2.0.0


From d4387802485236def83649a8acb4f48a00b5d109 Mon Sep 17 00:00:00 2001
From: Dabo Ross <daboross@daboross.net>
Date: Sat, 3 May 2014 23:44:11 +0200
Subject: [PATCH] Add profiling module for profiling


diff --git a/cloudbot/util/threaddump.py b/cloudbot/util/threaddump.py
new file mode 100644
index 0000000..a980ae6
--- /dev/null
+++ b/cloudbot/util/threaddump.py
@@ -0,0 +1,42 @@
+import threading
+import traceback
+import sys
+
+from util import web
+
+
+def get_name(thread_id):
+    current_thread = threading.current_thread()
+    if thread_id == current_thread._ident:
+        is_current = True
+        thread = current_thread
+    else:
+        is_current = False
+        thread = threading._active.get(thread_id)
+
+    if thread is not None:
+        if thread.name is not None:
+            name = thread.name
+        else:
+            name = "Unnamed thread"
+    else:
+        name = "Unknown thread"
+
+    if is_current:
+        name += " - Current thread"
+
+    return name
+
+
+def get_thread_dump():
+    code = []
+    threads = [(get_name(thread_id), traceback.extract_stack(stack))
+               for thread_id, stack in sys._current_frames().items()]
+    for thread_name, stack in threads:
+        code.append("# {}".format(thread_name))
+        for filename, lineno, name, line in stack:
+            code.append("{}:{} - {}".format(filename, lineno, name))
+            if line:
+                code.append("    {}".format(line.strip()))
+        code.append("")  # new line
+    return web.haste("\n".join(code), ext='txt')
diff --git a/plugins/profiling.py b/plugins/profiling.py
new file mode 100644
index 0000000..e0aea21
--- /dev/null
+++ b/plugins/profiling.py
@@ -0,0 +1,44 @@
+import gc
+
+import objgraph
+from pympler import muppy, summary, tracker
+
+from util import hook, threaddump
+
+
+@hook.command(autohelp=False, permissions=["botcontrol"])
+def threaddump(reply):
+    reply("Running thread dump")
+    return "Thread dump located at {}".format(threaddump.get_thread_dump())
+
+
+@hook.command(autohelp=False, permissions=["botcontrol"])
+def show_types():
+    print(gc.collect())
+    objgraph.show_most_common_types(limit=20)
+
+
+@hook.command(autohelp=False, permissions=["botcontrol"])
+def show_growth():
+    print(gc.collect())
+    objgraph.show_growth(limit=10)
+
+
+@hook.command(autohelp=False, permissions=["botcontrol"])
+def pympler_summary():
+    all_objects = muppy.get_objects()
+    sum = summary.summarize(all_objects)
+    summary.print_(sum)
+
+
+@hook.onload()
+def create_tracker():
+    global tr
+    tr = tracker.SummaryTracker()
+
+
+@hook.command(autohelp=False, permissions=["botcontrol"])
+def pympler_diff():
+    print("Printing diff")
+    tr.print_diff()
+    print("Done printing diff")
diff --git a/requirements.txt b/requirements.txt
index d24afdb..d7461a9 100644
--- a/requirements.txt
+++ b/requirements.txt
@@ -9,3 +9,6 @@ pycrypto
 pbkdf2
 requests
 psutil
+
+objgraph
+pympler
-- 
1.9.3


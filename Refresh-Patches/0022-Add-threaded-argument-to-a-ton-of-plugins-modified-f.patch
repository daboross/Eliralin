From e3fcbd52e8709f3e67d0ed1380b4b212cbfdd7c4 Mon Sep 17 00:00:00 2001
From: Dabo Ross <daboross@daboross.net>
Date: Thu, 29 May 2014 23:28:01 -0700
Subject: [PATCH] Add threaded argument to a ton of plugins (modified for
 modules -> plugins directory)


diff --git a/plugins/admin.py b/plugins/admin.py
index dd288e5..f09b1c9 100644
--- a/plugins/admin.py
+++ b/plugins/admin.py
@@ -3,7 +3,7 @@ import re
 from cloudbot import hook
 
 
-@hook.command(["groups", "listgroups", "permgroups"], permissions=["permissions_users"], autohelp=False)
+@hook.command(["groups", "listgroups", "permgroups"], threaded=False, permissions=["permissions_users"], autohelp=False)
 def get_permission_groups(conn):
     """groups -- lists all valid groups
     :type conn: core.irc.BotConnection
@@ -11,7 +11,7 @@ def get_permission_groups(conn):
     return "Valid groups: {}".format(conn.permissions.get_groups())
 
 
-@hook.command("gperms", permissions=["permissions_users"])
+@hook.command("gperms", threaded=False, permissions=["permissions_users"])
 def get_group_permissions(text, conn, notice):
     """gperms <group> -- lists permissions of a group
     :type text: str
@@ -29,7 +29,7 @@ def get_group_permissions(text, conn, notice):
         notice("Unknown group '{}'".format(group))
 
 
-@hook.command("gusers", permissions=["permissions_users"])
+@hook.command("gusers", threaded=False, permissions=["permissions_users"])
 def get_group_users(text, conn, notice):
     """gusers <group> -- lists users in a group
     :type text: str
@@ -47,7 +47,7 @@ def get_group_users(text, conn, notice):
         notice("Unknown group '{}'".format(group))
 
 
-@hook.command("uperms", autohelp=False)
+@hook.command("uperms", threaded=False, autohelp=False)
 def get_user_permissions(text, conn, mask, has_permission, notice):
     """uperms [user] -- lists all permissions given to a user, or the current user if none is given
     :type text: str
@@ -71,7 +71,7 @@ def get_user_permissions(text, conn, mask, has_permission, notice):
         return "User {} has no elevated permissions".format(user)
 
 
-@hook.command("ugroups", autohelp=False)
+@hook.command("ugroups", threaded=False, autohelp=False)
 def get_user_groups(text, conn, mask, has_permission, notice):
     """uperms [user] -- lists all permissions given to a user, or the current user if none is given
     :type text: str
@@ -95,7 +95,7 @@ def get_user_groups(text, conn, mask, has_permission, notice):
         return "User {} is in no permission groups".format(user)
 
 
-@hook.command("deluser", permissions=["permissions_users"])
+@hook.command("deluser", threaded=False, permissions=["permissions_users"])
 def remove_permission_user(text, bot, conn, notice, reply):
     """deluser <user> [group] -- Removes a user from a permission group, or all permission groups if none is specified
     :type text: str
@@ -150,7 +150,7 @@ def remove_permission_user(text, bot, conn, notice, reply):
         permission_manager.reload()
 
 
-@hook.command("adduser", permissions=["permissions_users"])
+@hook.command("adduser", threaded=False, permissions=["permissions_users"])
 def add_permissions_user(text, conn, bot, notice, reply):
     """adduser <user> <group> -- Adds a user to a permission group
     :type text: str
@@ -215,7 +215,7 @@ def restart(text, bot):
         bot.restart()
 
 
-@hook.command(permissions=["botcontrol"])
+@hook.command(threaded=False, permissions=["botcontrol"])
 def join(text, conn, notice):
     """join <channel> -- Joins a given channel
     :type text: str
@@ -228,7 +228,7 @@ def join(text, conn, notice):
         conn.join(target)
 
 
-@hook.command(permissions=["botcontrol"], autohelp=False)
+@hook.command(threaded=False, permissions=["botcontrol"], autohelp=False)
 def part(text, conn, chan, notice):
     """part [channel] -- Leaves a given channel, or the current one if no channel is specified
     :type text: str
@@ -246,7 +246,7 @@ def part(text, conn, chan, notice):
         conn.part(target)
 
 
-@hook.command(autohelp=False, permissions=["botcontrol"])
+@hook.command(threaded=False, autohelp=False, permissions=["botcontrol"])
 def cycle(text, conn, chan, notice):
     """cycle <channel> -- Cycles a given channel, or the current one if no channel is specified
     :type text: str
@@ -265,7 +265,7 @@ def cycle(text, conn, chan, notice):
         conn.join(target)
 
 
-@hook.command(permissions=["botcontrol"])
+@hook.command(threaded=False, permissions=["botcontrol"])
 def nick(text, conn, notice):
     """nick <nick> -- Changes the bot's nickname
     :type text: str
@@ -278,7 +278,7 @@ def nick(text, conn, notice):
     conn.set_nick(text)
 
 
-@hook.command(permissions=["botcontrol"])
+@hook.command(threaded=False, permissions=["botcontrol"])
 def raw(text, conn, notice):
     """raw <command> -- Sends a irc_raw IRC command
     :type text: str
@@ -288,7 +288,7 @@ def raw(text, conn, notice):
     conn.send(text)
 
 
-@hook.command(permissions=["botcontrol"])
+@hook.command(threaded=False, permissions=["botcontrol"])
 def say(text, conn, chan):
     """say [channel] <message> -- Makes the bot say <message> in [channel], or the current channel if none is specified
     :type text: str
@@ -306,7 +306,7 @@ def say(text, conn, chan):
     conn.msg(channel, text)
 
 
-@hook.command(permissions=["botcontrol"])
+@hook.command(threaded=False, permissions=["botcontrol"])
 def message(text, conn):
     """message <name> <message> -- Makes the bot say <message> to <name>, <name> may be a #channel or a nickname
     :type text: str
@@ -318,8 +318,7 @@ def message(text, conn):
     conn.msg(channel, text)
 
 
-@hook.command("act", permissions=["botcontrol"])
-@hook.command(permissions=["botcontrol"])
+@hook.command(["me", "act"], threaded=False, permissions=["botcontrol"])
 def me(text, conn, chan):
     """me [channel] <action> -- Makes the bot act out <action> in a [channel], or the current channel if none is given
     :type text: str
diff --git a/plugins/attacks.py b/plugins/attacks.py
index f4967d6..6473693 100644
--- a/plugins/attacks.py
+++ b/plugins/attacks.py
@@ -27,7 +27,7 @@ def is_self(conn, target):
         return False
 
 
-@hook.command
+@hook.command(threaded=False)
 def lart(text, conn, nick, notice, action):
     """lart <user> -- LARTs <user>.
     :type text: str
@@ -50,7 +50,7 @@ def lart(text, conn, nick, notice, action):
     action(phrase.format(user=target))
 
 
-@hook.command
+@hook.command(threaded=False)
 def insult(text, conn, nick, notice, message):
     """insult <user> -- Makes the bot insult <user>.
     :type text: str
@@ -70,7 +70,7 @@ def insult(text, conn, nick, notice, message):
     message("{}, {}".format(target, random.choice(insults)))
 
 
-@hook.command
+@hook.command(threaded=False)
 def flirt(text, conn, nick, notice, message):
     """flirt <user> -- Makes the bot flirt with <user>.
     :type text: str
diff --git a/plugins/brainfuck.py b/plugins/brainfuck.py
index 428f8b0..4d2750f 100644
--- a/plugins/brainfuck.py
+++ b/plugins/brainfuck.py
@@ -10,7 +10,7 @@ BUFFER_SIZE = 5000
 MAX_STEPS = 1000000
 
 
-@hook.command(["brainfuck", "bf"])
+@hook.command(["brainfuck", "bf"], threaded=False)
 def bf(text):
     """bf <prog> -- Executes <prog> as Brainfuck code.
     :type text: str
diff --git a/plugins/choose.py b/plugins/choose.py
index 06f0f70..b5e504a 100644
--- a/plugins/choose.py
+++ b/plugins/choose.py
@@ -4,7 +4,7 @@ import random
 from cloudbot import hook
 
 
-@hook.command
+@hook.command(threaded=False)
 def choose(text, notice):
     """choose <choice1>, [choice2], [choice3], etc. -- Randomly picks one of the given choices.
     :type text: str
diff --git a/plugins/coin.py b/plugins/coin.py
index cfbf144..7f032ba 100644
--- a/plugins/coin.py
+++ b/plugins/coin.py
@@ -3,7 +3,7 @@ import random
 from cloudbot import hook
 
 
-@hook.command(autohelp=False)
+@hook.command(threaded=False, autohelp=False)
 def coin(text, notice, action):
     """coin [amount] -- Flips [amount] of coins.
     :type text: str
diff --git a/plugins/core_ctcp.py b/plugins/core_ctcp.py
index 8453d57..fdda815 100644
--- a/plugins/core_ctcp.py
+++ b/plugins/core_ctcp.py
@@ -4,16 +4,16 @@ from cloudbot import hook
 
 
 # CTCP responses
-@hook.regex(r'^\x01VERSION\x01$')
+@hook.regex(r'^\x01VERSION\x01$', threaded=False)
 def ctcp_version(notice):
     notice('\x01VERSION Eliralin #refresh - http://git.io/elirefresh')
 
 
-@hook.regex(r'^\x01PING\x01$')
+@hook.regex(r'^\x01PING\x01$', threaded=False)
 def ctcp_ping(notice):
     notice('\x01PING: PONG')
 
 
-@hook.regex(r'^\x01TIME\x01$')
+@hook.regex(r'^\x01TIME\x01$', threaded=False)
 def ctcp_time(notice):
     notice('\x01TIME: The time is: {}'.format(time.strftime("%r", time.localtime())))
diff --git a/plugins/core_misc.py b/plugins/core_misc.py
index a296c88..b78c740 100644
--- a/plugins/core_misc.py
+++ b/plugins/core_misc.py
@@ -7,7 +7,7 @@ socket.setdefaulttimeout(10)
 
 
 # Auto-join on Invite (Configurable, defaults to True)
-@hook.event('INVITE')
+@hook.event('INVITE', threaded=False)
 def invite(paramlist, conn):
     """
     :type paramlist: list[str]
diff --git a/plugins/core_tracker.py b/plugins/core_tracker.py
index 6290333..0853f87 100644
--- a/plugins/core_tracker.py
+++ b/plugins/core_tracker.py
@@ -7,7 +7,7 @@ from cloudbot import hook
 nick_re = re.compile(":(.+?)!")
 
 
-@hook.event("KICK")
+@hook.event("KICK", threaded=False)
 def on_kick(irc_paramlist, conn, chan):
     """
     :type irc_paramlist: list[str]
@@ -22,7 +22,7 @@ def on_kick(irc_paramlist, conn, chan):
             conn.join(irc_paramlist[0])
 
 
-@hook.event("NICK")
+@hook.event("NICK", threaded=False)
 def on_nick(irc_paramlist, bot, conn, irc_raw):
     """
     :type irc_paramlist: list[str]
diff --git a/plugins/correction.py b/plugins/correction.py
index 8acae05..12f7037 100644
--- a/plugins/correction.py
+++ b/plugins/correction.py
@@ -5,7 +5,7 @@ from cloudbot import hook
 correction_re = re.compile(r"^[sS]/([^/]*)/([^/]*)(/.*)?\s*$")
 
 
-@hook.regex(correction_re)
+@hook.regex(correction_re, threaded=False)
 def correction(match, conn, chan, message):
     """
     :type match: re.__Match
diff --git a/plugins/cypher.py b/plugins/cypher.py
index 3c45b5e..e625436 100644
--- a/plugins/cypher.py
+++ b/plugins/cypher.py
@@ -35,7 +35,7 @@ def decode(password, encoded, notice):
     return "".join(dec)
 
 
-@hook.command
+@hook.command(threaded=False)
 def cypher(text, notice):
     """cypher <pass> <string> -- Cyphers <string> with <password>.
     :type text: str
@@ -49,7 +49,7 @@ def cypher(text, notice):
     return encode(password, plaintext)
 
 
-@hook.command
+@hook.command(threaded=False)
 def decypher(text, notice):
     """decypher <pass> <string> -- Decyphers <string> with <password>.
     :type text: str
diff --git a/plugins/dbtest.py b/plugins/dbtest.py
index 46024dd..53bd0da 100644
--- a/plugins/dbtest.py
+++ b/plugins/dbtest.py
@@ -9,7 +9,7 @@ users = Table(
 )
 
 
-@hook.command
+@hook.command()
 def dbadduser(text, db):
     """
     :type text: str
diff --git a/plugins/dice.py b/plugins/dice.py
index e12c218..7f2698f 100644
--- a/plugins/dice.py
+++ b/plugins/dice.py
@@ -34,7 +34,7 @@ def n_rolls(count, n):
 
 
 #@hook.regex(valid_diceroll, re.I)
-@hook.command(["roll", "dice"])
+@hook.command(["roll", "dice"], threaded=False)
 def dice(text, notice):
     """dice <dice roll> -- Simulates dice rolls. Example: 'dice 2d20-d5+4 roll 2': D20s, subtract 1D5, add 4
     :type text: str
diff --git a/plugins/drama.py b/plugins/drama.py
index 76ee990..ac7940e 100644
--- a/plugins/drama.py
+++ b/plugins/drama.py
@@ -7,7 +7,7 @@ api_url = "http://encyclopediadramatica.se/api.php?action=opensearch"
 ed_url = "http://encyclopediadramatica.se/"
 
 
-@hook.command
+@hook.command()
 def drama(text):
     """drama <phrase> -- Gets the first paragraph of
     the Encyclopedia Dramatica article on <phrase>."""
diff --git a/plugins/eightball.py b/plugins/eightball.py
index d4b1062..bcb52e4 100644
--- a/plugins/eightball.py
+++ b/plugins/eightball.py
@@ -19,7 +19,7 @@ def load_responses(bot):
                      f.readlines() if not line.startswith("//")]
 
 
-@hook.command(["8ball", "8", "eightball"])
+@hook.command(["8ball", "8", "eightball"], threaded=False)
 def eightball(action):
     """8ball <question> -- The all knowing magic eight ball, in electronic form. Ask and it shall be answered!"""
 
diff --git a/plugins/encrypt.py b/plugins/encrypt.py
index 21a9d45..38ec426 100644
--- a/plugins/encrypt.py
+++ b/plugins/encrypt.py
@@ -60,7 +60,7 @@ def get_salt(bot):
     return bot.config.get("random_salt")
 
 
-@hook.command
+@hook.command(threaded=False)
 def encrypt(text, bot, db, notice):
     """encrypt <pass> <string> -- Encrypts <string> with <pass>. (<string> can only be decrypted using this bot)
     :type text: str
@@ -98,7 +98,7 @@ def encrypt(text, bot, db, notice):
     return encoded.decode()
 
 
-@hook.command
+@hook.command(threaded=False)
 def decrypt(text, bot, db, notice):
     """decrypt <pass> <string> -- Decrypts <string> with <pass>. (can only decrypt strings encrypted on this bot)
     :type bot: core.bot.CloudBot
diff --git a/plugins/factoids.py b/plugins/factoids.py
index a7cfe07..8a6657a 100644
--- a/plugins/factoids.py
+++ b/plugins/factoids.py
@@ -27,6 +27,7 @@ table = Table(
     Column("nick", String)
 )
 
+
 @hook.onload()
 def load_cache(db):
     """
@@ -68,7 +69,7 @@ def del_factoid(db, word):
     load_cache(db)
 
 
-@hook.command(["r", "remember"], permissions=["addfactoid"])
+@hook.command(["r", "remember"], threaded=False, permissions=["addfactoid"])
 def remember(text, nick, db, notice):
     """remember <word> [+]<data> -- Remembers <data> with <word>. Add + to <data> to append."""
 
@@ -118,7 +119,7 @@ def forget(text, db, notice):
         return
 
 
-@hook.command
+@hook.command(threaded=False)
 def info(text, notice):
     """info <factoid> -- Shows the source of a factoid."""
 
@@ -130,7 +131,7 @@ def info(text, notice):
         notice("Unknown Factoid.")
 
 
-@hook.regex(r'^\^ ?(.+)')
+@hook.regex(r'^\^ ?(.+)', threaded=False)
 def factoid(inp, input, db, message, action):
     """?<word> -- Shows what data is associated with <word>."""
 
@@ -171,7 +172,7 @@ def factoid(inp, input, db, message, action):
             message(result)
 
 
-@hook.command(autohelp=False, permissions=["listfactoids"])
+@hook.command(autohelp=False, threaded=False, permissions=["listfactoids"])
 def listfactoids(reply):
     reply_text = []
     reply_text_length = 0
diff --git a/plugins/fortune.py b/plugins/fortune.py
index 1415d1d..9c99033 100644
--- a/plugins/fortune.py
+++ b/plugins/fortune.py
@@ -15,7 +15,6 @@ def load_fortunes(bot):
 
 
 @hook.command(autohelp=False, threaded=False)
-@asyncio.coroutine
 def fortune():
     """fortune -- Fortune cookies on demand."""
     return random.choice(fortunes)
diff --git a/plugins/geoip.py b/plugins/geoip.py
index 7156d52..921397a 100644
--- a/plugins/geoip.py
+++ b/plugins/geoip.py
@@ -32,7 +32,7 @@ def load_regions(bot):
         geo = pygeoip.GeoIP(os.path.join(bot.data_dir, "GeoLiteCity.dat"))
 
 
-@hook.command
+@hook.command()
 def geoip(text):
     """geoip <host/ip> -- Gets the location of <host/ip>"""
 
diff --git a/plugins/github.py b/plugins/github.py
index 5457b54..6984c26 100644
--- a/plugins/github.py
+++ b/plugins/github.py
@@ -58,7 +58,7 @@ def try_shorten_gitio(url, code=None):
         return url
 
 
-@hook.command
+@hook.command()
 def ghissues(text):
     """ghissues username/repo [number] - Get specified issue summary, or open issue count """
     args = text.split()
@@ -109,7 +109,7 @@ def ghissues(text):
         return format_without_summary.format(issue_number, state, user, title, shorturl)
 
 
-@hook.command
+@hook.command()
 def gitio(text):
     """gitio <url> [code] -- Shorten Github URLs with git.io. [code] is an optional custom short code."""
     split = text.split()
diff --git a/plugins/google_translate.py b/plugins/google_translate.py
index d48e092..6c10ab2 100644
--- a/plugins/google_translate.py
+++ b/plugins/google_translate.py
@@ -73,7 +73,7 @@ def match_language(fragment):
     return None
 
 
-@hook.command
+@hook.command()
 def translate(text, bot):
     """translate [source language [target language]] <sentence> -- translates
     <sentence> from source language (default autodetect) to target
diff --git a/plugins/help.py b/plugins/help.py
index de81f6e..78a18fc 100644
--- a/plugins/help.py
+++ b/plugins/help.py
@@ -4,7 +4,7 @@ import re
 from cloudbot import hook
 
 
-@hook.command("help", autohelp=False)
+@hook.command("help", autohelp=False, threaded=False)
 def help_command(text, conn, bot, notice, has_permission):
     """help  -- Gives a list of commands/help for a command.
     :type text: str
diff --git a/plugins/history.py b/plugins/history.py
index 41466bd..6f437e0 100644
--- a/plugins/history.py
+++ b/plugins/history.py
@@ -49,7 +49,7 @@ def chat_tracker(event, db, conn):
     track_history(event, message_time, conn)
 
 
-@hook.command(autohelp=False)
+@hook.command(autohelp=False, threaded=False)
 def resethistory(event, conn):
     """resethistory - Resets chat history for the current channel"""
     try:
diff --git a/plugins/horoscope.py b/plugins/horoscope.py
index b6c1253..394cb49 100644
--- a/plugins/horoscope.py
+++ b/plugins/horoscope.py
@@ -3,7 +3,7 @@
 from cloudbot import hook, http, formatting
 
 
-@hook.onload
+@hook.onload()
 def init(db):
     db.execute("create table if not exists horoscope(nick primary key, sign)")
     db.commit()
diff --git a/plugins/ignore.py b/plugins/ignore.py
index 00d34b3..ec0df55 100644
--- a/plugins/ignore.py
+++ b/plugins/ignore.py
@@ -21,7 +21,7 @@ def ensure_ignored(bot):
         bot.config.save_config()
 
 
-@hook.sieve
+@hook.sieve(threaded=False)
 def ignore_sieve(bot, event, _hook):
     """ blocks events from ignored channels/hosts
     :type bot: cloudbot.core.bot.CloudBot
@@ -50,7 +50,7 @@ def ignore_sieve(bot, event, _hook):
     return event
 
 
-@hook.command(autohelp=False)
+@hook.command(threaded=False, autohelp=False)
 def ignored(notice, conn):
     """ignored -- Lists ignored channels/users."""
     ignorelist = conn.config["plugins"]["ignore"]["ignored"]
diff --git a/plugins/imdb.py b/plugins/imdb.py
index e63add5..20a05a7 100644
--- a/plugins/imdb.py
+++ b/plugins/imdb.py
@@ -8,7 +8,7 @@ id_re = re.compile("tt\d+")
 imdb_re = (r'(.*:)//(imdb.com|www.imdb.com)(:[0-9]+)?(.*)', re.I)
 
 
-@hook.command
+@hook.command()
 def imdb(text):
     """imdb <movie> -- Gets information about <movie> from IMDb."""
 
diff --git a/plugins/kill.py b/plugins/kill.py
index d418efd..cbc6845 100644
--- a/plugins/kill.py
+++ b/plugins/kill.py
@@ -9,7 +9,7 @@ def get_generator(_json, variables):
                                  data["parts"], variables=variables)
 
 
-@hook.command
+@hook.command(threaded=False)
 def kill(text, action=None, nick=None, conn=None, notice=None):
     """kill <user> -- Makes the bot kill <user>."""
     target = text.strip()
diff --git a/plugins/lastfm.py b/plugins/lastfm.py
index 8d0d14b..620dacd 100644
--- a/plugins/lastfm.py
+++ b/plugins/lastfm.py
@@ -5,11 +5,9 @@ from cloudbot import hook, http, timesince
 api_url = "http://ws.audioscrobbler.com/2.0/?format=json"
 
 
-@hook.command('l', autohelp=False)
-@hook.command(autohelp=False)
-def lastfm(inp, nick='', db=None, bot=None, notice=None):
-    """lastfm [user] [dontsave] -- Displays the now playing (or last played)
-     track of LastFM user [user]."""
+@hook.command(["lastfm", "l"], autohelp=False)
+def lastfm(inp, nick, db, bot, notice):
+    """lastfm [user] [dontsave] -- Displays the now playing (or last played) track of LastFM user [user]."""
     api_key = bot.config.get("api_keys", {}).get("lastfm")
     if not api_key:
         return "error: no api key set"
diff --git a/plugins/log.py b/plugins/log.py
index b9158f4..f449a2a 100644
--- a/plugins/log.py
+++ b/plugins/log.py
@@ -3,6 +3,7 @@ log.py: written by Scaevolus 2009
 
 edited 2014
 """
+import asyncio
 
 import os
 import codecs
diff --git a/plugins/metacritic.py b/plugins/metacritic.py
index 0b5adf0..71dbf35 100644
--- a/plugins/metacritic.py
+++ b/plugins/metacritic.py
@@ -6,8 +6,7 @@ from urllib.error import HTTPError
 from cloudbot import hook, http
 
 
-@hook.command('mc')
-@hook.command
+@hook.command(["metacritic", "mc"])
 def metacritic(inp):
     """mc [all|movie|tv|album|x360|ps3|pc|gba|ds|3ds|wii|vita|wiiu|xone|ps4] <title>
     Gets rating for <title> from metacritic on the specified medium."""
diff --git a/plugins/minecraft_bukget.py b/plugins/minecraft_bukget.py
index 4b9b023..30f2b74 100644
--- a/plugins/minecraft_bukget.py
+++ b/plugins/minecraft_bukget.py
@@ -119,8 +119,7 @@ def format_output(data):
 
 ## HOOK FUNCTIONS
 
-@hook.command('plugin')
-@hook.command
+@hook.command(["bukget", "plugin"])
 def bukget(text, reply, message):
     """bukget <slug/name> - Look up a plugin on dev.bukkit.org"""
     # get the plugin slug using search
diff --git a/plugins/minecraft_items.py b/plugins/minecraft_items.py
index 03ef37b..dc5ed61 100644
--- a/plugins/minecraft_items.py
+++ b/plugins/minecraft_items.py
@@ -48,7 +48,7 @@ with open("./data/itemids.txt") as f:
         ids.append((itemid, name))
 
 
-@hook.command(["mcitem", "mcid"])
+@hook.command(["mcitem", "mcid"], threaded=False)
 def mcitem(text, reply):
     """mcitem <item/id> -- gets the id from an item or vice versa"""
     text = text.lower().strip()
@@ -78,7 +78,7 @@ def mcitem(text, reply):
     return out
 
 
-@hook.command(["mccraft", "mcrecipe"])
+@hook.command(["mccraft", "mcrecipe"], threaded=False)
 def mcrecipe(text, reply):
     """mcrecipe <item> -- gets the crafting recipe for an item"""
     text = text.lower().strip()
diff --git a/plugins/minecraft_wiki.py b/plugins/minecraft_wiki.py
index a8a3b25..1d724f9 100644
--- a/plugins/minecraft_wiki.py
+++ b/plugins/minecraft_wiki.py
@@ -6,7 +6,7 @@ api_url = "http://minecraft.gamepedia.com/api.php?action=opensearch"
 mc_url = "http://minecraft.gamepedia.com/"
 
 
-@hook.command
+@hook.command()
 def mcwiki(text):
     """mcwiki <phrase> -- Gets the first paragraph of
     the Minecraft Wiki article on <phrase>."""
-- 
1.9.3


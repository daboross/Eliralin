From add71776ae5eb5e80fa26b5439e719b61ea5f15a Mon Sep 17 00:00:00 2001
From: Dabo Ross <daboross@daboross.net>
Date: Sun, 27 Apr 2014 14:32:55 -0700
Subject: [PATCH] Add thread dump module


diff --git a/modules/threaddump.py b/modules/threaddump.py
new file mode 100644
index 0000000..3c7a120
--- /dev/null
+++ b/modules/threaddump.py
@@ -0,0 +1,71 @@
+import os
+import threading
+import traceback
+import sys
+
+from util import hook, web
+
+
+def get_name(thread_id):
+    current_thread = threading.current_thread()
+    if thread_id == current_thread._ident:
+        is_current = True
+        thread = threading.current_thread()
+    else:
+        is_current = False
+        thread = threading._active.get(thread_id)
+
+    if thread is not None:
+        if thread.name is not None:
+            name = thread.name
+        else:
+            name = "Unnamed thread"
+    else:
+        name = "Unknown thread"
+
+    if is_current:
+        name += " - Current thread"
+
+    return name
+
+
+def get_thread_dump():
+    code = []
+    threads = [(get_name(thread_id), traceback.extract_stack(stack))
+               for thread_id, stack in sys._current_frames().items()]
+    current_dir = os.path.abspath(".")
+    for thread_name, stack in threads:
+        code.append("# {}".format(thread_name))
+
+        for filename, lineno, name, line in stack:
+            assert isinstance(filename, str)
+            if filename.startswith(current_dir):
+                filename = "." + filename[len(current_dir):]
+            elif filename.startswith("/usr/lib/python"):
+                # this is totally os-biased
+                filename = filename[len("/usr/lib/"):]
+            elif filename.startswith("/usr/local/lib/python"):
+                filename = filename[len("/usr/local/lib/"):]
+            code.append("{}:{} - {}".format(filename, lineno, name))
+            if line:
+                code.append("  {}".format(line.strip()))
+        code.append("")  # new line
+    return web.haste("\n".join(code), ext='txt')
+
+
+@hook.command(autohelp=False, permissions=["botcontrol"])
+def threaddump(reply):
+    reply("Running thread dump")
+    return "Thread dump located at {}".format(get_thread_dump())
+
+
+@hook.onload()
+def start_watch_thread():
+    threading.Thread(target=input_watch_thread, name="Thread dump", daemon=True).start()
+
+
+def input_watch_thread():
+    while True:
+        input()
+        print("Running thread dump")
+        print("Thread dump located at {}".format(get_thread_dump()))
-- 
1.9.2

